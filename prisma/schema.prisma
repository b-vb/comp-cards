// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                 String    @id @default(cuid())
  userId             String
  providerType       String
  providerId         String
  providerAccountId  Int
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model User {
  id            String           @id @default(cuid())
  name          String?
  email         String?          @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt
  accounts      Account[]
  sessions      Session[]
  cards         DoubleMiniCard[]
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

model DoubleMiniCard {
  id        String              @id @default(cuid())
  createdAt DateTime            @default(now())
  updatedAt DateTime            @updatedAt
  name      String
  routines  DoubleMiniRoutine[]
  user      User?               @relation(fields: [userId], references: [id])
  userId    String?
}

model DoubleMiniRoutine {
  id         String             @id @default(cuid())
  createdAt  DateTime           @default(now())
  updatedAt  DateTime           @updatedAt
  order      Int
  mount      DoubleMiniElement? @relation(name: "mountElement", fields: [mountId], references: [id])
  mountId    String?
  spotter    DoubleMiniElement? @relation(name: "spotterElement", fields: [spotterId], references: [id])
  spotterId  String?
  dismount   DoubleMiniElement? @relation(name: "dismountElement", fields: [dismountId], references: [id])
  dismountId String?
  card       DoubleMiniCard?    @relation(fields: [cardId], references: [id])
  cardId     String?
}

model DoubleMiniElement {
  id                 String              @id @default(cuid())
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  name               String
  figCode            String
  difficulty         String
  routinesAsMount    DoubleMiniRoutine[] @relation("mountElement")
  routinesAsSpotter  DoubleMiniRoutine[] @relation("spotterElement")
  routinesAsDismount DoubleMiniRoutine[] @relation("dismountElement")
}
